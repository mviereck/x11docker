.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.1.
.TH X11DOCKER "1" "October 2022" "x11docker 7.4.2-2" "User Commands"
.SH NAME
x11docker \- manual page for x11docker 7.4.2-2
.SH DESCRIPTION
x11docker: Run GUI applications and desktop environments in containers.
.IP
Supports docker, podman, nerdctl and proot.
Can run X servers from host or in containers of x11docker/xserver.
Can also provide X servers to host applications.
.PP
Usage:
To run a container on a new X server:
.IP
x11docker IMAGE
x11docker [OPTIONS] IMAGE [COMMAND]
x11docker [OPTIONS] \fB\-\-\fR IMAGE [COMMAND [ARG1 ARG2 ...]]
x11docker [OPTIONS] \fB\-\-\fR CUSTOM_RUN_OPTIONS \fB\-\-\fR IMAGE [COMMAND [ARG1 ARG2 ...]]
.SS "To run a host application on a new X server:"
.IP
x11docker [OPTIONS] \fB\-\-backend\fR=\fI\,host\/\fR COMMAND
x11docker [OPTIONS] \fB\-\-backend\fR=\fI\,host\/\fR \fB\-\-\fR COMMAND [ARG1 ARG2 ...]
x11docker [OPTIONS] \fB\-\-backend\fR=\fI\,host\/\fR \fB\-\-\fR \fB\-\-\fR COMMAND [ARG1 ARG2 ...] \fB\-\-\fR [ARG3]
.SS "To run only an empty new X server:"
.IP
x11docker [OPTIONS] \fB\-\-xonly\fR
.PP
x11docker always runs a fresh container from image and discards it afterwards.
Runs on Linux and (with some restrictions) on MS Windows. Not adapted for macOS.
.SS "Optional features:"
.IP
* GPU hardware acceleration
* Sound with pulseaudio or ALSA
* Clipboard sharing
* Printer access
* Webcam access
* Persistent home folder
* Wayland support
* Language locale creation
* Several init systems and DBus in container
* Support of several container runtimes and backends
.SS "Focus on security:"
.IP
* Avoids X security leaks using additional X servers.
* Container user is same as host user to avoid root in container.
* Restricts container capabilities to bare minimum.
.PP
To switch between docker, podman and nerdctl use option \fB\-\-backend\fR.
.PP
x11docker sets up an unprivileged container user with password 'x11docker'
and restricts container capabilities. Some applications might behave different
than with a regular 'docker run' command due to these security restrictions.
Achieve a less restricted setup with \fB\-\-cap\-default\fR or \fB\-\-sudouser\fR.
.SS "Dependencies on host:"
.IP
For core functionality x11docker only needs bash, an X server and one of
docker, podman or nerdctl.
Depending on chosen options x11docker might need some additional tools.
It checks for them on startup and shows messages if some are missing.
.IP
* Most recommended: Provide image x11docker/xserver to run X or Wayland
.IP
in container. The image contains all X related dependencies.
.IP
Otherwise provide on host:
.IP
* Recommended to allow security and convenience:
.IP
X servers: xpra Xephyr nxagent Xorg
X tools:   xauth xclip xrandr xhost xinit
.IP
* Additional for advanced GPU support: weston Xwayland xpra xdotool
.IP
See also: https://github.com/mviereck/x11docker/wiki/Dependencies
.SS "Dependencies in image:"
.IP
No dependencies in image except for a few feature options. Most important:
.TP
\fB\-\-gpu\fR:
OpenGL/MESA packages, collected often in 'mesa\-utils' package.
.HP
\fB\-\-pulseaudio\fR: Needs pulseaudio on host and pulseaudio client libs in image.
.HP
\fB\-\-printer\fR: Needs cups on host and cups client libs in image.
.IP
See also: https://github.com/mviereck/x11docker/wiki/Dependencies
.PP
Options: (short options do not accept arguments)
.TP
\fB\-\-help\fR
Display this message and exit.
.TP
\fB\-\-license\fR
Show license of x11docker (MIT) and exit.
.TP
\fB\-\-version\fR
Show x11docker version and exit.
.SS "Basic settings:"
.TP
\fB\-d\fR, \fB\-\-desktop\fR
Indicate a desktop environment in image.
.TP
\fB\-i\fR, \fB\-\-interactive\fR
Run with an interactive tty to allow shell commands.
Useful with commands like bash.
.TP
\fB\-\-backend\fR=\fI\,BACKEND\/\fR
Container backend to use. BACKEND can be:
docker  (recommended for rootful) (default)
podman  (recommended for rootless and rootful)
nerdctl
.TP
Other backends: (no real containers)
host   Run a host application.
proot  Run in a rootfs file system. (rootless)
.TP
Either specify path to rootfs as IMAGENAME,
or provide one to call with 'image\-name' at
~/.local/share/x11docker/ROOTFS/image\-name
.TP
Tool 'image2rootfs' helps to create a rootfs from docker
images: https://github.com/mviereck/image2rootfs
.TP
\fB\-\-rootless\fR [=yes|no]
Use (or disallow) rootless backend.
Default behaviour without option \fB\-\-rootless\fR:
\fB\-\-backend\fR=\fI\,docker\/\fR: rootful unless DOCKER_HOST is set.
\fB\-\-backend\fR=\fI\,podman\/\fR: rootless except started as root.
\fB\-\-backend\fR=\fI\,nerdctl\/\fR: rootless except started as root
.TP
\fB\-\-xc\fR [=yes|no|BACKEND]
Run X server in container of x11docker/xserver.
BACKEND can specify one of docker|podman|nerdctl.
.TP
\fB\-\-xonly\fR
Only start empty X server.
.SS "Host integration:"
.TP
\fB\-\-alsa\fR [=ALSA_CARD]
Sound with ALSA. You can define a desired sound card
with ALSA_CARD. List of available sound cards: aplay \fB\-l\fR
.TP
\fB\-c\fR, \fB\-\-clipboard\fR [=yes|no|oneway|superv|altv] Share clipboard with host.
Possible arguments:
.TP
yes:
Share clipboard in both directions.
Includes middle\-mouse\-click selection.
.TP
oneway: Copy clipboard from container to host only.
Includes middle\-mouse\-click selection.
.TP
superv: Keys [SUPER][v] copy clipboard from host to
container. Does not copy middle\-mouse\-click
to container. Otherwise same as 'oneway'.
.TP
altv:
Same as 'superv' but using keys [ALT][v].
.TP
no:
Do not share clipboard.
.TP
\fB\-g\fR, \fB\-\-gpu\fR [=yes|no|iglx|virgl] GPU access for hardware accelerated OpenGL.
Works best with open source drivers on host and in image.
For closed source nvidia drivers regard terminal output.
Direct rendering supported by few X server options only.
Arg 'iglx' enables indirect rendering (\fB\-\-xorg\fR only).
Arg 'virgl' allows GPU access for all X servers, but
with limited performance and with \fB\-\-xc\fR only.
.TP
\fB\-I\fR, \fB\-\-network\fR [=NET]
Allow internet access. (i.e. allow Docker default.)
For optional argument NET see Docker documentation of
docker run option \fB\-\-network\fR. Docker default is bridge.
.TP
\fB\-l\fR, \fB\-\-lang\fR [=LOCALE]
Set language variable LANG=LOCALE in container.
Without arg LOCALE host variable \fB\-\-lang=\fR$LANG is used.
If LOCALE is missing in image, x11docker generates it
with 'localedef' in container (needs 'locales' package).
Examples for LOCALE: ru, en, de, zh_CN, cz, fr, fr_BE.
.TP
\fB\-P\fR, \fB\-\-printer\fR [=MODE] Share host printers through CUPS server.
Optional MODE can be 'socket' or 'tcp'. Default: socket
.TP
\fB\-p\fR, \fB\-\-pulseaudio\fR [=MODE]
Sound with pulseaudio. Needs 'pulseaudio' on host
and in image. Optional arg MODE can be 'socket', 'tcp'
or 'host'. tcp mode needs network access with \fB\-\-network\fR.
.TP
\fB\-\-webcam\fR
Share host webcam device files.
.SS "Shared host folders or volumes:"
.TP
\fB\-m\fR, \fB\-\-home\fR [=ARG]
Create a persistent HOME folder for data storage.
Default: Uses ~/.local/share/x11docker/IMAGENAME.
ARG can be another host folder or a volume.
(~/.local/share/x11docker has a softlink to \fI\,~/x11docker\/\fP.)
(Use \fB\-\-homebasedir\fR to change this base storage folder.)
.TP
\fB\-\-share\fR=\fI\,ARG\/\fR
Share host file or folder ARG. Read\-only with ARG:ro
Device files in \fI\,/dev\/\fP can be shared, too.
ARG can also be a volume instead of a host folder.
.SS "X server options:"
.TP
\fB\-\-auto\fR
Automatically choose X server (default). Influenced
notably by options \fB\-\-desktop\fR, \fB\-\-gpu\fR, \fB\-\-wayland\fR, \fB\-\-wm\fR.
.TP
\fB\-h\fR, \fB\-\-hostdisplay\fR
Share host display :0. Quite bad container isolation!
Least overhead of all X server options.
Some apps may fail due to restricted untrusted cookies.
Remove restrictions with option \fB\-\-clipboard\fR.
.TP
\fB\-a\fR, \fB\-\-xpra\fR
Nested X server supporting seamless and \fB\-\-desktop\fR mode.
.TP
\fB\-\-xpra2\fR
Like \fB\-\-xpra\fR \fB\-\-xc\fR, but runs xpra client on host.
.TP
\fB\-A\fR, \fB\-\-xpra\-xwayland\fR
Like \fB\-\-xpra\fR, but supports option \fB\-\-gpu\fR.
.TP
\fB\-\-xpra2\-xwayland\fR
Like \fB\-\-xpra2\fR, but supports option \fB\-\-gpu\fR.
.TP
\fB\-n\fR, \fB\-\-nxagent\fR
Nested X server supporting seamless and \fB\-\-desktop\fR mode.
Faster than \fB\-\-xpra\fR, but can have compositing issues.
.TP
\fB\-y\fR, \fB\-\-xephyr\fR
Nested X server for \fB\-\-desktop\fR mode. Without \fB\-\-desktop\fR
a host window manager will be provided (option \fB\-\-wm\fR).
.TP
\fB\-Y\fR, \fB\-\-weston\-xwayland\fR Desktop mode like \fB\-\-xephyr\fR, but supports option \fB\-\-gpu\fR.
Runs from console, within X and within Wayland.
.TP
\fB\-x\fR, \fB\-\-xorg\fR
Core Xorg server. Runs ootb from console.
Switch tty with <CTRL><ALT><F1>....<F12>. Always switch
to a black tty before switching to X to avoid crashes.
.SS "Special X server options:"
.TP
\fB\-t\fR, \fB\-\-tty\fR
Terminal only mode. Does not run an X or Wayland server.
.TP
\fB\-\-xvfb\fR
Invisible X server using Xvfb.
Can be used for custom access with xpra or VNC.
.TP
\fB\-X\fR, \fB\-\-xwayland\fR
Blanc Xwayland, needs a running Wayland compositor.
.TP
\fB\-\-xwin\fR
X server to run in Cygwin/X on MS Windows.
.TP
\fB\-\-runx\fR
X server wrapper for VcXsrv and Xwin on MS Windows.
.SS "Wayland instead of X:"
.TP
\fB\-W\fR, \fB\-\-wayland\fR
Automatically set up a Wayland environment.
Chooses one of following options and regards \fB\-\-desktop\fR.
.TP
\fB\-T\fR, \fB\-\-weston\fR
Weston without X for pure Wayland applications.
Runs in X, in Wayland or from console.
.TP
\fB\-K\fR, \fB\-\-kwin\fR
KWin without X for pure Wayland applications.
Runs in X, in Wayland or from console.
.TP
\fB\-H\fR, \fB\-\-hostwayland\fR
Share host Wayland without X for pure Wayland apps.
.SS "X and Wayland appearance options:"
.TP
\fB\-\-border\fR [=COLOR] Draw a colored border in windows of \fB\-\-xpra[\-xwayland]\fR.
Argument COLOR can be e.g. 'orange' or '#F00'. Thickness
can be specified, too, e.g. 'red,3'. Default: 'blue,1'
.TP
\fB\-\-dpi\fR=\fI\,N\/\fR
dpi value (dots per inch) to submit to X clients.
Influences font size of some applications.
.TP
\fB\-f\fR, \fB\-\-fullscreen\fR
Run in fullscreen mode.
.TP
\fB\-\-output\-count\fR=\fI\,N\/\fR
Multiple virtual monitors for Weston or KWin.
.TP
\fB\-\-rotate\fR=\fI\,N\/\fR
Rotate display (\fB\-\-xorg\fR, \fB\-\-weston\fR and \fB\-\-weston\-xwayland\fR)
Allowed values: 0, 90, 180, 270, flipped, flipped\-90,
flipped\-180, flipped\-270.  (flipped means mirrored)
.TP
\fB\-\-scale\fR=\fI\,N\/\fR
Scale/zoom factor N for xpra, Xorg or Weston.
Allowed for \fB\-\-xpra\fR* and \fB\-\-xorg\fR: 0.25...8.0.
Allowed for \fB\-\-weston\fR and \fB\-\-weston\-xwayland\fR: 1...9.
.TP
\fB\-\-size\fR=\fI\,WxH\/\fR
Screen size of new X server (e.g. 800x600).
.TP
\fB\-w\fR, \fB\-\-wm\fR [=ARG]
Provide a host window manager to container applications.
Possible ARG:
.TP
host: autodetection of a host window manager.
COMMAND: command of a desired host window manager.
none: Run without a window manager. Same as \fB\-\-desktop\fR.
.TP
\fB\-F\fR, \fB\-\-xfishtank\fR
Show fish tank on new X server.
.SS "X and Wayland special configuration:"
.TP
\fB\-\-checkwindow\fR [=ARG]
Run container until all X windows are closed.
If ARG is provided, run container as long as 'grep' can
find ARG in output of 'xwininfo \fB\-root\fR \fB\-children\fR'.
This option helps to keep alive containers with
self\-forking applications like gnome\-terminal
or to stop endless running ones like chromium.
.TP
\fB\-\-clean\-xhost\fR
Disable xhost access policies on host display.
.TP
\fB\-\-composite\fR [=yes|no]
Enable or disable X extension Composite.
Default is yes except for \fB\-\-nxagent\fR. Can cause or
fix issues with some applications on nxagent.
.TP
\fB\-\-display\fR=\fI\,N\/\fR
Use display number N for new X server.
.TP
\fB\-\-keymap\fR=\fI\,LAYOUT\/\fR
Set keyboard layout for new X server, e.g. de, us, ru.
For possible LAYOUT look at \fI\,/usr/share/X11/xkb/symbols\/\fP.
.TP
\fB\-\-vt\fR [=N]
Use vt / tty N. Without N search an unused tty.
.TP
\fB\-\-westonini\fR=\fI\,FILE\/\fR
Custom weston.ini for \fB\-\-weston\fR and \fB\-\-weston\-xwayland\fR.
.TP
\fB\-\-xhost\fR [=STR]
Set "xhost STR" on new X server (see 'man xhost').
Without STR will set:  +SI:localuser:$USER
(Use with care. '\-\-xhost=+' allows access for everyone).
.TP
\fB\-\-xoverip\fR [=yes|no|listentcp|socat] Connect to X over TCP network. Special
setups only, usually only enabled by x11docker itself.
.TP
yes:
Use listentcp if possible, otherwise socat.
.TP
no:
Use shared unix socket (default).
.TP
listentcp: Use X option '\-listen tcp'.
socat:     Use socat to create a fake TCP connection.
.TP
\fB\-\-xauth\fR [=yes|trusted|untrusted|no] Configure X cookie authentication.
Possible arguments:
.TP
yes|trusted: Enable cookie authentication with trusted
cookies. (General x11docker default.)
.TP
untrusted: Untrusted cookie for untrusted apps
limiting access to X resources.
Useful to avoid MIT\-SHM with \fB\-\-hostdisplay\fR.
.TP
no:
Disable cookie authentication. Dangerous!
.TP
\fB\-\-xtest\fR [=yes|no] Enable or disable X extension XTEST. Default is yes for
\fB\-\-xpra\fR and \fB\-\-xvfb\fR, no for other X servers.
Needed to allow keyboard and mouse control with xpra.
.SS "Container user settings:"
.HP
\fB\-\-group\-add\fR=\fI\,GROUP\/\fR Add container user to group GROUP.
.TP
\fB\-\-hostuser\fR=\fI\,USER\/\fR
Run X (and container user) as user USER. Default is
result of $(logname). (x11docker must run as root).
.TP
\fB\-\-password\fR [=WORD]
Change container user password and exit.
Interactive input if argument WORD is not provided.
Stored encrypted in ~/.config/x11docker/passwd.
.TP
\fB\-\-sudouser\fR [=nopasswd] Allow su and sudo for container user. Use with care,
severe reduction of default x11docker security!
Optionally passwordless sudo with argument nopasswd.
Default password is 'x11docker'.
.TP
\fB\-\-user\fR=\fI\,N\/\fR
Create container user N (N=name or N=uid). Default:
same as host user. N can also be an unknown user id.
You can specify a group id with N being 'user:gid'.
Special case: \fB\-\-user\fR=\fI\,RETAIN\/\fR keeps image user settings.
.SS "Container capabilities:"
.IP
In most setups x11docker sets \fB\-\-cap\-drop\fR=\fI\,ALL\/\fR \fB\-\-security\-opt\fR=\fI\,no\-new\-privileges\/\fR
and shows warnings if doing otherwise.
Custom capabilities can be added with \fB\-\-cap\-add\fR=\fI\,CAP\/\fR after  \fB\-\-\fR
.TP
\fB\-\-cap\-default\fR
Allow default container capabilities.
Includes \fB\-\-newprivileges\fR=\fI\,yes\/\fR.
.TP
\fB\-\-ipc\fR [=ARG]
Without ARG sets run option \fB\-\-ipc\fR=\fI\,host\/\fR. (Discouraged)
For other possible ARG see docker run reference.
.TP
\fB\-\-limit\fR [=FACTOR] Limit CPU and RAM usage of container to
currently free RAM x FACTOR and available CPUs x FACTOR.
Allowed range is 0 < FACTOR <= 1.
Default for \fB\-\-limit\fR without argument FACTOR: 0.5
.TP
\fB\-\-newprivileges\fR [=yes|no|auto]
Set or unset run option
\fB\-\-security\-opt\fR=\fI\,no\-new\-privileges\/\fR. Default with no
argument is 'yes'. Default for most cases is 'no'.
.SS "Container init system, elogind and DBus daemon:"
.TP
\fB\-\-dbus\fR [=system]
Run DBus user session daemon for container command.
With argument 'system' also run a DBus system daemon.
(To run a DBus system daemon rather use one of
.IP
\fB\-\-init\fR=\fI\,systemd\/\fR|openrc|runit|sysvinit )
.TP
\fB\-\-hostdbus\fR
Connect to DBus user session from host.
.TP
\fB\-\-init\fR [=INITSYSTEM] Run an init system as PID 1 in container. Solves the
zombie reaping issue. INITSYSTEM can be:
.TP
tini:
Default. Mostly present as docker\-init
on host. x11docker might as well use
catatonit provided by podman.
.TP
systemd:
systemd in container.
.TP
sysvinit:
sysvinit in container.
.TP
runit:
runit in container
.TP
openrc:
openrc in container
.TP
s6\-overlay: s6\-overlay in container.
none:       No init system, CMD will be PID 1.
.TP
\fB\-\-sharecgroup\fR
Share \fI\,/sys/fs/cgroup\/\fP. Allows elogind in container if
used with one of \fB\-\-init\fR=\fI\,openrc\/\fR|runit|sysvinit
.SS "Container special configuration:"
.TP
\fB\-\-env\fR VAR=value
Set custom environment variable VAR=value
.TP
\fB\-\-name\fR=\fI\,NAME\/\fR
Specify container name NAME.
.TP
\fB\-\-no\-entrypoint\fR
Disable ENTRYPOINT in image to allow other commands, too
.TP
\fB\-\-no\-setup\fR
No x11docker setup in running container. Disallows
several other options. See also \fB\-\-user\fR=\fI\,RETAIN\/\fR.
.TP
\fB\-\-runtime\fR=\fI\,RUNTIME\/\fR
Specify container runtime. Known by x11docker:
runc:         Docker default runtime.
crun:         Fast replacement for runc written in C.
nvidia:       Runtime for nvidia/nvidia\-docker images.
sysbox\-runc:  Runtime for powerful root in container.
.TP
\fB\-\-shell\fR=\fI\,SHELL\/\fR
Set preferred user shell. Example: \fB\-\-shell=\fR/bin/zsh
.TP
\fB\-\-snap\fR
Enable support for Docker in snap.
.TP
\fB\-\-stdin\fR
Forward stdin of x11docker to container command.
.TP
\fB\-\-workdir\fR=\fI\,DIR\/\fR
Set working directory DIR.
.PP
Additional commands: (You might need to move them to background with 'CMD &'.)
.TP
\fB\-\-runasroot\fR=\fI\,CMD\/\fR
Run command CMD as root in container.
.TP
\fB\-\-runasuser\fR=\fI\,CMD\/\fR
Run command CMD with user privileges in container
before running image command.
.HP
\fB\-\-runfromhost\fR=\fI\,CMD\/\fR Run host command CMD on new X server.
.SS "Miscellaneous:"
.TP
\fB\-\-build\fR IMAGE
Build an image from a Dockerfile from x11docker
repository. Example: 'x11docker \fB\-\-build\fR x11docker/fvwm'
Works for all repositories beginning with 'dockerfile'
at https://github.com/mviereck?tab=repositories
Regards (only) option \fB\-\-backend\fR=\fI\,BACKEND\/\fR.
.TP
\fB\-\-cachebasedir\fR=\fI\,DIR\/\fR
Custom base folder for cache files.
.TP
\fB\-\-homebasedir\fR=\fI\,DIR\/\fR
Custom base folder for option \fB\-\-home\fR.
.TP
\fB\-\-fallback\fR [=yes|no]
Allow or deny fallbacks if a chosen option cannot
be fulfilled. By default fallbacks are allowed.
.TP
\fB\-\-launcher\fR
Create application launcher with current options
on desktop and exit. You can get a menu entry moving
the created .desktop file to ~/.local/share/applications
.TP
\fB\-\-mobyvm\fR
Use MobyVM (for WSL2 only that defaults to Linux Docker).
.TP
\fB\-\-preset\fR=\fI\,FILE\/\fR
Read a set of predefined options stored in file FILE.
Useful to shortcut often used option combinations.
FILE is searched in directory \fI\,/etc/x11docker/preset\/\fP,
or in directory ~/.config/x11docker/preset.
.TP
\- Multiple lines in FILE are allowed.
\- Comment lines must begin with #
\- Local presets supersede global ones in \fI\,/etc\/\fP
.TP
Special case: A preset file with file name 'default'
will be applied automatically for all x11docker sessions.
.SS "Output of parseable information on stdout:"
.IP
Get output e.g. with: read xenv < <(x11docker \fB\-\-printenv\fR x11docker/check)
Optional argument FILE allows to print the information into a file.
.TP
\fB\-\-printenv\fR [=FILE]
Print variables to access new display.
.TP
\fB\-\-printid\fR [=FILE]
Print container ID.
.TP
\fB\-\-printinfofile\fR [=FILE]
Print path to internal x11docker info storage.
.TP
\fB\-\-printpid1\fR [=FILE]
Print host PID of container PID 1.
.SS "Verbosity options:"
.TP
\fB\-D\fR, \fB\-\-debug\fR
Debug mode: Show some less verbose debug output
and enable rigorous error control.
.TP
\fB\-\-printcheck\fR
Show dependency check messages.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Suppress x11docker terminal messages.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose. Output of x11docker.log on stderr.
.TP
\fB\-V\fR
Be verbose with colored output.
.SS "Cleanup options (need root permissions):"
.TP
\fB\-\-cleanup\fR
Clean up orphaned containers and cache files. Those
can remain if x11docker still runs on system shutdown.
Terminates currently running x11docker containers, too.
Regards (only) option \fB\-\-backend\fR=\fI\,BACKEND\/\fR.
.SS "Installation options (need root permissions):"
.IP
Note: Installer mode should be disabled for packaged version of x11docker, e.g. .deb or .rpm
.TP
\fB\-\-install\fR
Install x11docker from current folder.
Useful to install from an extracted zip file.
.TP
\fB\-\-update\fR [=diff]
Download and install latest release from github.
.TP
\fB\-\-update\-master\fR [=diff]
Download and install latest master version.
Optional argument 'diff' shows the difference between
installed and new version without installing it.
.TP
\fB\-\-remove\fR
Remove x11docker from your system. Includes \fB\-\-cleanup\fR.
Preserves ~/.local/share/x11docker from option \fB\-\-home\fR.
.PP
\fB\-\-update\fR, \fB\-\-update\-master\fR and \fB\-\-remove\fR regard a possible custom installation
path different from default \fI\,/usr/bin\/\fP directory.
Additional options are disregarded.
.SS "Exit codes:"
.TP
0:
Success
.TP
64:
x11docker error
.TP
130:
Terminated by ctrl\-c
.IP
other: Exit code of command in container
.PP
x11docker version: 7.4.2\-2
Please report issues and get help at: https://github.com/mviereck/x11docker
.SH "SEE ALSO"
The full documentation for
.B x11docker
is maintained as a Texinfo manual.  If the
.B info
and
.B x11docker
programs are properly installed at your site, the command
.IP
.B info x11docker
.PP
should give you access to the complete manual.
